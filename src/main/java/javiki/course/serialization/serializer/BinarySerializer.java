package javiki.course.serialization.serializer;

import javiki.course.serialization.Statable;
import javiki.course.serialization.StateType;
import java.io.*;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.ArrayList;
import java.util.List;
import java.util.function.Function;
import java.util.stream.Collectors;

public class BinarySerializer implements StateSerializer, Serializable {

    private static final long serialVersionUID = 1L;

    @Override
    public void serializeAndSave(Path filePath, List<Statable<?>> statables) throws IOException {
        Files.createDirectories(filePath.getParent()); // –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç

        List<Object> stateObjects = new ArrayList<>();
        for (Statable<?> statable : statables) {
            stateObjects.add(statable.retrieveState());
        }

        try (ObjectOutputStream oos = new ObjectOutputStream(Files.newOutputStream(filePath))) {
            oos.writeObject(stateObjects);
            System.out.println("‚úÖ –ë–∏–Ω–∞—Ä–Ω–∞—è —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ " + filePath);
        }
    }

    @SuppressWarnings("unchecked")
    @Override
    public List<Statable<?>> downloadAndDeserialize(Path filePath, StateType stateName) throws IOException {
        List<?> stateResult;

        System.out.println("üì• –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –±–∏–Ω–∞—Ä–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–∑: " + filePath);

        try (ObjectInputStream ois = new ObjectInputStream(Files.newInputStream(filePath))) {
            stateResult = (List<?>) ois.readObject();
            System.out.println("‚úÖ –ë–∏–Ω–∞—Ä–Ω—ã–π —Ñ–∞–π–ª —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—á–∏—Ç–∞–Ω.");
        } catch (ClassNotFoundException e) {
            throw new IOException("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–µ—Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏–∏: –∫–ª–∞—Å—Å –Ω–µ –Ω–∞–π–¥–µ–Ω", e);
        } catch (IOException e) {
            throw new IOException("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –±–∏–Ω–∞—Ä–Ω–æ–≥–æ —Ñ–∞–π–ª–∞: " + filePath, e);
        }

        Function<Object, Statable<?>> stateMapper = StateManagerMapper.MAPPERS.get(stateName.getReadableName());
        if (stateMapper == null) {
            throw new IllegalArgumentException("‚ùå –û—à–∏–±–∫–∞: –ù–µ –Ω–∞–π–¥–µ–Ω –º–∞–ø–ø–µ—Ä –¥–ª—è " + stateName.getReadableName());
        }

        List<Statable<?>> deserializedObjects = stateResult.stream()
                .map(stateMapper)
                .collect(Collectors.toList());

        System.out.println("‚úÖ –î–µ—Å–µ—Ä–∏–∞–ª–∏–∑–æ–≤–∞–Ω–æ –æ–±—ä–µ–∫—Ç–æ–≤: " + deserializedObjects.size());
        return deserializedObjects;
    }

    @Override
    public String getFileExtension() {
        return ".bin";
    }
}
